<?xml version="1.0"?>
<launch>

    <!-- roslaunch arguments -->  
    <arg name="debug" default="false"/>
    <arg name="gui" default="true"/>
    <arg name="gazebo_world" default=""/>

    <param name="robot_description" command="$(find xacro)/xacro.py '$(find injerrobot_description)/robots/injerrobot_platform.urdf.xacro'" />

    
    <!-- Call a python script to the run a service call to gazebo_ros to spawn a URDF robot -->
    <!--<node name="urdf_spawner" pkg="gazebo_ros" type="spawn_model" respawn="false" output="screen"-->
        <!--args="-urdf -model injerrobot_platform -param robot_description"/>-->

    <include file="$(find gazebo_ros)/launch/empty_world.launch">
        <!--<arg name="world_name" value="empty.world"/>-->
        <arg name="debug" value="$(arg debug)" />
        <arg name="gui" value="$(arg gui)" />
        <arg name="paused" value="false"/>
        <arg name="use_sim_time" value="true"/>
        <arg name="headless" value="false"/>
    </include>


    <!--<include file="$(find injerrobot_control)/launch/kuka_control.launch" />-->
    
    <group ns="left_arm">
        <param name="robot_description" command="$(find xacro)/xacro.py '$(find injerrobot_description)/robots/left_arm.urdf.xacro'" /> <!-- needed by urdf_spawner, because otherwise would spawn the two robots -->

        <!-- Load joint controller configurations from YAML file to parameter server -->
        <rosparam file="$(find injerrobot_bringup)/config/left_arm_joint_names.yaml" command="load"/>
        <rosparam file="$(find injerrobot_bringup)/config/left_arm_controllers.yaml" command="load"/>
        
        <!-- Load standard kuka controller joint names from YAML file to parameter server -->
    	<node name="controller_spawner" pkg="controller_manager" type="spawner" respawn="false" output="screen"
        	args="position_trajectory_controller joint_state_controller --shutdown-timeout 1"/>
    
        <node name="urdf_spawner" pkg="gazebo_ros" type="spawn_model" respawn="false" output="screen"
            args="-urdf -model left_arm -param robot_description"/>
    
    </group>
    <group ns="right_arm">
        <param name="robot_description" command="$(find xacro)/xacro.py '$(find injerrobot_description)/robots/right_arm.urdf.xacro'" />

        <!-- Load joint controller configurations from YAML file to parameter server -->
        <rosparam file="$(find injerrobot_bringup)/config/right_arm_joint_names.yaml" command="load"/>
        <rosparam file="$(find injerrobot_bringup)/config/right_arm_controllers.yaml" command="load"/>
        <!-- Load standard kuka controller joint names from YAML file to parameter server -->
    	<node name="controller_spawner" pkg="controller_manager" type="spawner" respawn="false" output="screen"
        	args="position_trajectory_controller joint_state_controller --shutdown-timeout 1"/>
    
        <node name="urdf_spawner" pkg="gazebo_ros" type="spawn_model" respawn="false" output="screen"
            args="-urdf -model right_arm -param robot_description -x 1.9 -Y 1.5707"/>
    </group>

   	<node name="joint_state_republisher" pkg="joint_state_publisher" type="joint_state_publisher">
		<rosparam param="source_list">[/left_arm/joint_states, /right_arm/joint_states]</rosparam>
	</node>
    <!-- Combine joint values -->
    <node name="robot_state_publisher" pkg="robot_state_publisher" type="state_publisher"/>

</launch>
